)
strawHatPirate
strawHatPirate <- transform(
strawHatPirate,
ratingSum = strength + intelligence,
ratingAvg = (strength + intelligence)/2
)
strawHatPirate
strawHatPirate <- within(strawHatPirate, {
bountyLevel[bounty<100000000] <- "Low"
bountyLevel[bounty>100000000 & bounty<500000000] <- "Medium"
bountyLevel[bounty>=500000000] <- "High"
}
)
strawHatPirate <- within(strawHatPirate, {
bountyLevel <- NA
bountyLevel[bounty<100000000] <- "Low"
bountyLevel[bounty>100000000 & bounty<500000000] <- "Medium"
bountyLevel[bounty>=500000000] <- "High"
}
)
strawHatPirate
View(strawHatPirate)
names(strawHatPirate)#印出所有的變數
names(strawHatPirate)[6] <- "attack"#將strength改名為attack
strawHatPirate
names(strawHatPirate)[6,8:9] <- c("strength", "sumRating", "avgRating")
strawHatPirate
names(strawHatPirate)[6, 8, 9] <- c("strength", "sumRating", "avgRating")
names(strawHatPirate)[8, 9] <- c("sumRating", "avgRating")
strawHatPirate
names(strawHatPirate)#印出所有的變數
names(strawHatPirate)[8:9] <- c("sumRating", "avgRating")
strawHatPirate
str(strawHatPirate$birthday)
attach(strawHatPirate)
birthdayAsDate <- as.Date(birthday, "%m/%d/%Y")#Y for 4-digit, y for 2-digit
str(strawHatPirate$birthdayAsDate)
detach(strawHatPirate)
str(strawHatPirate$birthdayAsDate)
strawHatPirate$birthdayAsDate <- as.Date(strawHatPirate$birthday, "%m/%d/%Y")#Y for 4-digit, y for 2-digit
str(strawHatPirate$birthdayAsDate)
max(strawHatPirate$birthdayAsDate)
min(strawHatPirate$birthdayAsDate)#轉換成日期格式後可以下max或min
q()
q()
name <- c("Monkey D. Luffy", "Roronoa Zoro", "Nami", "Sanji")
occupation <- c("Captain", "Swordsman", "Navigator", "Chef")
bounty <- c(500000000, 320000000, 66000000, NA)
age <- c(19, 21, 20, 21)
birthday <- c("5/5/1996", "11/11/1994", "7/3/1995", "3/2/1994")
strength <- c(99, 90, 15, 80)
intelligence <- c(20, 30, 90, 40)
strawHatPirate <- data.frame(name, occupation, bounty, age, birthday, strength, intelligence, stringsAsFactors=FALSE)
strawHatPirate[order(strawHatPirate$age),]
strawHatPirate[order(-strawHatPirate$intelligence, strawHatPirate$age),]
strawHatPirate[order(-strawHatPirate$intelligence, strawHatPirate$strength),]#先用智力遞減排序再用力量遞增排序
q()
date <- c(2015-11-13, 2015-03-18, 2015-06-26, 2015-11-12, 2015-10-31, 2015-10-10, 2015-06-26, 2015-05-22, 2015-03-21)
country <- c('France', 'Tunisia', 'Tunisia', 'Lebanon', 'Egypt', 'Turkey', 'Kuwait', 'Saudi Arabia', 'Yemen')
city <- c('Paris', 'Tunis', 'Sousse', 'Beirut', 'Sunmarine', 'Ankara', 'Kuwait City', 'Qatif', 'Sana\'a')
deaths <- c(129, 19, 38, 43, 224, 102, 27, 21, 137)
ISAttacks2015 <- data.frame(date, country, city, deaths)
View(ISAttacks2015)
date <- c('2015-11-13', '2015-03-18', '2015-06-26', '2015-11-12', '2015-10-31', '2015-10-10', '2015-06-26', '2015-05-22', '2015-03-21')
country <- c('France', 'Tunisia', 'Tunisia', 'Lebanon', 'Egypt', 'Turkey', 'Kuwait', 'Saudi Arabia', 'Yemen')
city <- c('Paris', 'Tunis', 'Sousse', 'Beirut', 'Sunmarine', 'Ankara', 'Kuwait City', 'Qatif', 'Sana\'a')
deaths <- c(129, 19, 38, 43, 224, 102, 27, 21, 137)
ISAttacks2015 <- data.frame(date, country, city, deaths)
View(ISAttacks2015)
str(ISAttacks2015)
date <- c('2015-11-13', '2015-03-18', '2015-06-26', '2015-11-12', '2015-10-31', '2015-10-10', '2015-06-26', '2015-05-22', '2015-03-21')
country <- c('France', 'Tunisia', 'Tunisia', 'Lebanon', 'Egypt', 'Turkey', 'Kuwait', 'Saudi Arabia', 'Yemen')
city <- c('Paris', 'Tunis', 'Sousse', 'Beirut', 'Sunmarine', 'Ankara', 'Kuwait City', 'Qatif', 'Sana\'a')
deaths <- c(129, 19, 38, 43, 224, 102, 27, 21, 137)
ISAttacks2015 <- data.frame(date, country, city, deaths, stringsAsFactors=FALSE)
View(ISAttacks2015)
str(date)
ISAttacks2015$date <- as.Date(ISAttacks2015$date, "%Y-%m-%d")#Y for 4-digit
View(ISAttacks2015)
str(date)
str(ISAttacks2015)
ISAttacks2015[order(ISAttacks2015$date),]
View(ISAttacks2015)
ISAttacks2015 <- ISAttacks2015[order(ISAttacks2015$date),]
View(ISAttacks2015)
date <- c('2015-11-13', '2015-03-18', '2015-06-26', '2015-11-12', '2015-10-31', '2015-10-10', '2015-06-26', '2015-05-22', '2015-03-21')
country <- c('France', 'Tunisia', 'Tunisia', 'Lebanon', 'Egypt', 'Turkey', 'Kuwait', 'Saudi Arabia', 'Yemen')
city <- c('Paris', 'Tunis', 'Sousse', 'Beirut', 'Sunmarine', 'Ankara', 'Kuwait City', 'Qatif', 'Sana\'a')
deaths <- c(129, 19, 38, 43, 224, 102, 27, 21, 137)
ISAttacks2015 <- data.frame(date, country, city, deaths, stringsAsFactors=FALSE)
ISAttacks2015$date <- as.Date(ISAttacks2015$date, "%Y-%m-%d")#Y for 4-digit
ISAttacks <- ISAttacks2015[order(ISAttacks2015$date),]
View(ISAttacks)
View(ISAttacks2015)
date <- c('2015-11-13', '2015-11-12', '2015-10-31', '2015-10-10', '2015-06-26', '2015-06-26', '2015-05-22', '2015-03-21','2015-03-18')
country <- c('France', 'Lebanon', 'Egypt', 'Turkey', 'Tunisia', 'Kuwait', 'Saudi Arabia', 'Yemen', 'Tunisia')
city <- c('Paris', 'Beirut', 'Sunmarine', 'Ankara', 'Sousse', 'Kuwait City', 'Qatif', 'Sana\'a', 'Tunis')
deaths <- c(129, 43, 224, 102, 38, 27, 21, 137, 19)
ISAttacks2015 <- data.frame(date, country, city, deaths, stringsAsFactors=FALSE)
ISAttacks2015$date <- as.Date(ISAttacks2015$date, "%Y-%m-%d")#Y for 4-digit
View(ISAttacks2015)
date <- c('2015-11-13', '2015-11-12', '2015-10-31', '2015-10-10', '2015-06-26', '2015-06-26', '2015-05-22', '2015-03-21','2015-03-18')
country <- c('France', 'Lebanon', 'Egypt', 'Turkey', 'Tunisia', 'Kuwait', 'Saudi Arabia', 'Yemen', 'Tunisia')
city <- c('Paris', 'Beirut', 'Sharm el Sheikh', 'Ankara', 'Sousse', 'Kuwait City', 'Qatif', 'Sana\'a', 'Tunis')
deaths <- c(129, 43, 224, 102, 38, 27, 21, 137, 19)
ISAttacks2015 <- data.frame(date, country, city, deaths, stringsAsFactors=FALSE)
ISAttacks2015$date <- as.Date(ISAttacks2015$date, "%Y-%m-%d")#Y for 4-digit
View(ISAttacks2015)
date <- c('2015-11-13', '2015-11-12', '2015-10-31', '2015-10-10', '2015-07-18', '2015-06-26', '2015-06-26', '2015-05-22', '2015-03-21','2015-03-18')
country <- c('France', 'Lebanon', 'Egypt', 'Turkey', 'Tunisia', 'Iraq', 'Kuwait', 'Saudi Arabia', 'Yemen', 'Tunisia')
city <- c('Paris', 'Beirut', 'Sharm el Sheikh', 'Ankara', 'Sousse', 'Khan Bani Saad', 'Kuwait City', 'Qatif', 'Sana\'a', 'Tunis City')
deaths <- c(129, 43, 224, 102, 38, 125, 27, 21, 137, 19)
ISAttacks2015 <- data.frame(date, country, city, deaths, stringsAsFactors=FALSE)
ISAttacks2015$date <- as.Date(ISAttacks2015$date, "%Y-%m-%d")#Y for 4-digit
View(ISAttacks2015)
str(ISAttacks2015)
name <- c("Monkey D. Luffy", "Roronoa Zoro", "Nami", "Sanji")
occupation <- c("Captain", "Swordsman", "Navigator", "Chef")
bounty <- c(500000000, 320000000, 66000000, NA)
age <- c(19, 21, 20, 21)
birthday <- c("5/5/1996", "11/11/1994", "7/3/1995", "3/2/1994")
strength <- c(99, 90, 15, 80)
intelligence <- c(20, 30, 90, 40)
strawHatPirate <- data.frame(name, occupation, bounty, age, birthday, strength, intelligence, stringsAsFactors=FALSE)
name2 <- c("Monkey D. Luffy", "Tony Tony Chopper", "Nico Robin", "Brook")
devilFruit <- c("Rubber", "Human", "Flower", "Underworld")
devilFruitList <- cbind(name2, devilFruit)
devilFruitList <- data.frame(name2, devilFruit, stringsAsFactors=FALSE)
View(strawHatPirate)
View(devilFruitList)
devilFruitStrawHatPirate <- merge(strawHatPirate, devilFruitList, by.x="name", by.y="name2")
View(devilFruitStrawHatPirate)
devilFruitStrawHatPirate <- merge(strawHatPirate, devilFruitList, by.x="name", by.y="name2", all.x=TRUE)#使用all.x=TRUE的option
View(devilFruitStrawHatPirate)
devilFruitStrawHatPirate <- merge(strawHatPirate, devilFruitList, by.x="name", by.y="name2", all.y=TRUE)#使用all.y=TRUE的option
View(devilFruitStrawHatPirate)
devilFruitStrawHatPirate <- merge(strawHatPirate, devilFruitList, by.x="name", by.y="name2", all.x=TRUE, all.y=TRUE)#使用all.x=TRUE與all.y=TRUE的option
View(devilFruitStrawHatPirate)
View(strawHatPirate)
chopper <- c("Tony Tony Chopper", "Doctor", 50, 17, "12/24/1998", 50, 80)
chopper <- c("Tony Tony Chopper", "Doctor", 50, 17, "12/24/1998", 50, 80)
strawHatPirate2 <- rbind(strawHatPirate, chopper)
View(strawHatPirate2)
strawHatPirate3 <- strawHatPirate2[, c(1:3)]#取前3個變數
View(strawHatPirate3)
strawHatPirate3 <- strawHatPirate2[, c("name", "occupation", "bounty")]#取前3個變數
View(strawHatPirate3)
strawHatPirate4 <- strawHatPirate2[, -c(1:3)]#刪除前3個變數
View(strawHatPirate4)
strawHatPirate4 <- strawHatPirate2[, -c("name", "occupation", "bounty")]#刪除前3個變數
strawHatPirate4 <- strawHatPirate2[, !c("name", "occupation", "bounty")]#刪除前3個變數
strawHatPirate4 <- strawHatPirate2[, -c(1:3)]#刪除前3個變數
View(strawHatPirate3)
strawHatPirate4 <- strawHatPirate2[, c(-1:-3)]#刪除前3個變數
View(strawHatPirate4)
strawHatPirate4 <- strawHatPirate2[, c(-"name", -"occupation", -"bounty")]#刪除前3個變數
deleteVars <- names(strawHatPirate2) %in% c("name", "occupation", "bounty")#logical test
strawHatPirate4 <- strawHatPirate2[!deleteVars]#刪除前3個變數
View(strawHatPirate4)
View(strawHatPirate2)
strawHatPirate5 <- strawHatPirate2[1:3, ]#選擇前3列
View(strawHatPirate5)
attach(strawHatPirate2)
strawHatPirate5 <- strawHatPirate2[age>17 & occupation=='Captain',]
detach(strawHatPirate2)
View(strawHatPirate5)
attach(strawHatPirate2)
strawHatPirate5 <- strawHatPirate2[age>17 & occupation=='Captain',]
View(strawHatPirate5)
attach(strawHatPirate2)
strawHatPirate5 <- strawHatPirate2[age>17 & occupation=="Captain",]
detach(strawHatPirate2)
attach(strawHatPirate2)
strawHatPirate5 <- strawHatPirate2[occupation=="Captain",]
View(strawHatPirate5)
attach(strawHatPirate2)
strawHatPirate5 <- strawHatPirate2[occupation==="Captain",]
attach(strawHatPirate2)
strawHatPirate5 <- strawHatPirate2[occupation=="Captain",]
View(strawHatPirate5)
strawHatPirate5 <- strawHatPirate2[strawHatPirate2$occupation=='Captain', ]
View(strawHatPirate5)
View(strawHatPirate5)
View(strawHatPirate)
View(strawHatPirate2)
strawHatPirate5 <- strawHatPirate2[strawHatPirate2$age>17 & strawHatPirate2$strength>30, ]#2個篩選條件使用&連接
View(strawHatPirate5)
install.packages("sqldf")
strawHatPirate6 <- sqldf("select name, occupation, bounty from strawHatPirate2 where age>17 order by age")
library(sqldf)
strawHatPirate6 <- sqldf("select name, occupation, bounty from strawHatPirate2 where age>17 order by age")
View(strawHatPirate6)
strawHatPirate6 <- sqldf("select name, occupation, bounty, age from strawHatPirate2 where age>17 order by age")
View(strawHatPirate6)
strawHatPirate6 <- sqldf("select name, occupation, bounty, age from strawHatPirate2 where age>17 order by bounty")
View(strawHatPirate6)
View(strawHatPirate2)
sqldf("select avg(age) as avgAge from strawHatPirate2")
View(devilFruitList)
sqldf("select a.name, b.devilFruit from strawHatPirate2 a inner join devilFruitList on a.name=b.name2")
sqldf("select strawHatPirate2.name, devilFruitList.devilFruit from strawHatPirate2 inner join devilFruitList on strawHatPirate2.name=devilFruitList.name2")
q()
q()
naExample <- c(88, NA, 12, 92, 33)
nullExample <- c(88, NULL, 12, 92, 33)
mean(naExample)
mean(naExample, na.rm=TRUE)#na.rm as in NA removoe
mean(nullExample)
matrix <- matrix(1:8, nrow=2)#創造一個2*4的矩陣做範例
matrix
apply(matrix, 1, sum)#把各列加總
apply(matrix, 2, sum)#把各欄加總
sumRow <- apply(matrix, 1, sum)#把各列加總
sumColumn <- apply(matrix, 2, sum)#把各欄加總
typeof(sumRow)
class(sumRow)
str(sumRow)
str(matrix)
class(matrix)
fn <- function(x){
x/10
}
fnRow <- apply(matrix, 1, fn)
fnRow
matrix
fnColumn <- apply(matrix, 2, fn)
fnColumn
?max()
max
min
maximum <- function(x){
sortX <- sort(x, decreasing=TRUE)
return sortX[1]
}
fnRow <- apply(matrix, 1, fn)
maximum <- function(x){
sortX <- sort(x, decreasing=TRUE)
return sortX[1]
}
maximum <- function(x){
return sort(x, decreasing=TRUE)[1]
}
maximum <- function(x){
sort(x, decreasing=TRUE)[1]
}
maxRow <- apply(matrix, 1, maximum)
maxColumn <- apply(matrix, 2, maximum)
maxRow
maxColumn
matrix
maximum <- function(x){
sort(x)[1]
}
maxRow <- apply(matrix, 1, maximum)
maxColumn <- apply(matrix, 2, maximum)
maximum <- function(x){
sort(x, decreasing=TRUE)[1]
}
maxRow <- apply(matrix, 1, maximum)
maxColumn <- apply(matrix, 2, maximum)
findOutliers <- function(x){
findOutlier <- function(xrow){
medianXRow <- median(xrow)
distance <- abs(xrow-medianXRow)
return(which.max(distance))
}
return(apply(x, 1, findOutlier))
}
salesMatrix <- matrix(c(1,2,30,1,10,11,1,50,60), nrow=3)
salesMatrix
salesMatrix <- matrix(c(1,2,30,1,10,11,1,50,60), nrow=3, byrow=TRUE)
salesMatrix
findOutliers(salesMatrix)
findOutliers <- function(x){
findOutlier <- function(xrow){
medianXRow <- median(xrow)
distance <- abs(xrow-medianXRow)
return(which.max(distance))
}
return(apply(x, 2, findOutlier))
}
salesMatrix <- matrix(c(1,2,30,1,10,11,1,50,60), nrow=3, byrow=TRUE)
findOutliers(salesMatrix)
findOutliers <- function(x){
findOutlier <- function(xrow){
medianXRow <- median(xrow)
distance <- abs(xrow-medianXRow)
return(max(distance))
}
return(apply(x, 1, findOutlier))
}
salesMatrix <- matrix(c(1,2,30,1,10,11,1,50,60), nrow=3, byrow=TRUE)
findOutliers(salesMatrix)
findOutliers <- function(x){
findOutlier <- function(xrow){
medianXRow <- median(xrow)
distance <- abs(xrow-medianXRow)
return(which.max(distance))
}
return(apply(x, 1, findOutlier))
}
salesMatrix <- matrix(c(1,2,30,1,10,11,1,50,60), nrow=3, byrow=TRUE)
findOutliers(salesMatrix)
findOutliers <- function(x){
findOutlier <- function(xrow){
medianXRow <- median(xrow)
distance <- abs(xrow-medianXRow)
return(which.max(distance))
}
return(apply(x, 1, findOutlier))
}
salesMatrix <- matrix(c(1,2,30,1,10,11,50,1,60), nrow=3, byrow=TRUE)
findOutliers(salesMatrix)#告訴你第一列的第三個元素、第二列的第一個
list(1:5, 11:15)
lapply(list1, meadian)#應用median函數到list1
lapply(list1, median)#應用median函數到list1
list1 <- list(1:5, 11:15)#創造一個包含兩個vector的list
lapply(list1, median)#應用median函數到list1
sapply(list1, median)#應用median函數到list1
name <- c("Monkey D. Luffy", "Roronoa Zoro", "Nami", "Sanji")
occupation <- c("Captain", "Swordsman", "Navigator", "Chef")
bounty <- c(500000000, 320000000, 66000000, NA)
age <- c(19, 21, 20, 21)
birthday <- c("5/5/1996", "11/11/1994", "7/3/1995", "3/2/1994")
strength <- c(99, 90, 15, 80)
intelligence <- c(20, 30, 90, 40)
strawHatPirate <- data.frame(name, occupation, bounty, age, birthday, strength, intelligence, stringsAsFactors=FALSE)
lapply(strawHatPirate, sort)#對每個變數都應用sort函數
sapply(strawHatPirate, sort)#對每個變數都應用sort函數
name <- c("Monkey D. Luffy", "Roronoa Zoro", "Nami", "Sanji")
occupation <- c("Captain", "Swordsman", "Navigator", "Chef")
bounty <- c(500000000, 320000000, 66000000, NA)
age <- c(19, 21, 20, 21)
birthday <- c("5/5/1996", "11/11/1994", "7/3/1995", "3/2/1994")
strength <- c(99, 90, 15, 80)
intelligence <- c(20, 30, 90, 40)
strawHatPirate <- data.frame(name, occupation, bounty, age, birthday, strength, intelligence, stringsAsFactors=FALSE)
strawHatPirate$birthdayAsDate <- as.Date(strawHatPirate$birthday, "%m/%d/%Y")#Y for 4-digit, y for 2-digit
lapply(strawHatPirate, sort)#對每個變數都應用sort函數
sapply(strawHatPirate, sort)#對每個變數都應用sort函數
strawHatPirate <- strawHatPirate[ ,-c("birthday")]
View(strawHatPirate)
strawHatPirate <- strawHatPirate[ ,-5]
View(strawHatPirate)
lapply(strawHatPirate, sort)#對每個變數都應用sort函數
sapply(strawHatPirate, sort)#對每個變數都應用sort函數
diabetes <- factor(c("Type1", "Type2", "Type1", "Type1"))
status <- factor(c("Poor", "Improved", "Excellent", "Poor"))
patient <- 1:4
patient <- as.character(1:4)
patient <- as.character(1:4)
diabetes <- factor(c("Type1", "Type2", "Type1", "Type1"))
status <- factor(c("Poor", "Improved", "Excellent", "Poor"))
patientDataFrame <- data.frame(patient, diabetes, status)
str(patientDataFrame)
patient <- as.character(1:4)
age <- (33, 55, 60, 75)
diabetes <- factor(c("Type1", "Type2", "Type1", "Type1"))
status <- factor(c("Poor", "Improved", "Excellent", "Poor"))
patientDataFrame <- data.frame(patient, diabetes, status, stringsAsFactors=F)
str(patientDataFrame)
status
tapply(age, diabetes, mean)
tapply(age, status, mean)
status <- c("Poor", "Improved", "Excellent", "Poor")
tapply(age, status, mean)#
status
diabetes
status <- c("Poor", "Improved", "Excellent", "Poor")
statusF <- factor(status)
status <- factor(c("Poor", "Improved", "Excellent", "Poor"))
age <- c(20, 33, 55, 72)
tapply(age, status, mean)
status <- factor(c("Poor", "Improved", "Excellent", "Poor", "Excellent"))
age <- c(20, 33, 55, 72, 61)
tapply(age, status, mean)
q()
year <- c(1996, 1997,	1998,	1999,	2000,	2001,	2002,	2003,	2004,	2005,	2006,	2007,	2008,	2009,	2010,	2011,	2012,	2013,	2014)
salaryReal <- c(42520, 44195, 44798, 46040, 46605, 46716, 46330, 47058, 46989, 46447, 46521, 46650, 45038, 43193, 44989, 45508, 44726, 44446, 45494)
salary <- data.frame(year, salaryReal)
str(salary)
salary$year <- as.Date(salary$year, "%Y")
plot(year, salaryReal, type="l")
points(year, salaryReal)
plot(year, salaryReal, type="l", xlab="Year", ylab="Real Salary")
points(year, salaryReal)
length(year)
year <- c(1996, 1997,	1998,	1999,	2000,	2001,	2002,	2003,	2004,	2005,	2006,	2007,	2008,	2009,	2010,	2011,	2012,	2013,	2014)
salaryReal <- c(42520, 44195, 44798, 46040, 46605, 46716, 46330, 47058, 46989, 46447, 46521, 46650, 45038, 43193, 44989, 45508, 44726, 44446, 45494)
plot(year, salaryReal, type="l", xlab="Year", ylab="Real Salary", main="Real Salary by Year")
points(year[1:4], salaryReal[1:4], col="blue", bg="blue")
points(year[5:12], salaryReal[5:12], col="green", bg="green")
points(year[13:length(year)], salaryReal[13:length(salaryReal)], col="blue", bg="blue")
plot(year, salaryReal, type="l", xlab="Year", ylab="Real Salary", main="Real Salary by Year")
points(year[1:4], salaryReal[1:4], col="blue", bg="blue", pch=22)
points(year[5:12], salaryReal[5:12], col="green", bg="green", pch=22)
points(year[13:length(year)], salaryReal[13:length(salaryReal)], col="blue", bg="blue", pch=22)
plot(year, salaryReal, type="l", xlab="Year", ylab="Real Salary", main="Real Salary by Year in Taiwan", lwd=2)
points(year[1:4], salaryReal[1:4], col="blue", bg="blue", pch=22)
points(year[5:12], salaryReal[5:12], col="green", bg="green", pch=22)
points(year[13:length(year)], salaryReal[13:length(salaryReal)], col="blue", bg="blue", pch=22)
plot(year, salaryReal, type="l", xlab="Year", ylab="Real Salary", main="Real Salary by Year in Taiwan", lwd=1)
points(year[1:4], salaryReal[1:4], col="blue", bg="blue", pch=22)
points(year[5:12], salaryReal[5:12], col="green", bg="green", pch=19)
points(year[13:length(year)], salaryReal[13:length(salaryReal)], col="blue", bg="blue", pch=22)
plot(year, salaryReal, type="l", xlab="Year", ylab="Real Salary", main="Real Salary by Year in Taiwan", lwd=1)
points(year[1:4], salaryReal[1:4], col="blue", bg="blue", pch=15)
points(year[5:12], salaryReal[5:12], col="green", bg="green", pch=16)
points(year[13:length(year)], salaryReal[13:length(salaryReal)], col="blue", bg="blue", pch=17)
sys.getlocale()
Sys.getlocale()
Sys.setlocale(category = "LC_ALL", locale = "cht")
legend(80, 75, pch=c(15,16,17), col=c("blue", "green", "blue"), c("李登輝", "陳水扁", "馬英九"), bty=”o”,  box.col=”darkgreen”, cex=.8)
legend(80, 75, pch=c(15,16,17), col=c("blue", "green", "blue"), c("李登輝", "陳水扁", "馬英九"), bty="o",  box.col="darkgreen", cex=.8)
plot(year, salaryReal, type="l", xlab="Year", ylab="Real Salary", main="台灣實質性薪資所得1996-2014", lwd=1)
points(year[1:4], salaryReal[1:4], col="blue", bg="blue", pch=15)
points(year[5:12], salaryReal[5:12], col="green", bg="green", pch=16)
points(year[13:length(year)], salaryReal[13:length(salaryReal)], col="blue", bg="blue", pch=17)
legend(80, 75, pch=c(15,16,17), col=c("blue", "green", "blue"), c("李登輝", "陳水扁", "馬英九"), bty="o",  box.col="darkgreen", cex=.8)
legend(100, 100, pch=c(15,16,17), col=c("blue", "green", "blue"), c("李登輝", "陳水扁", "馬英九"), bty="o",  box.col="darkgreen", cex=.8)
legend("topleft", pch=c(15,16,17), col=c("blue", "green", "blue"), c("李登輝", "陳水扁", "馬英九"), bty="o",  box.col="darkgreen", cex=.8)
legend("bottomright", pch=c(15,16,17), col=c("blue", "green", "blue"), c("李登輝", "陳水扁", "馬英九"), bty="o",  box.col="darkgreen", cex=.8)
plot(year, salaryReal, type="l", xlab="Year", ylab="Real Salary", main="台灣實質性薪資所得1996-2014", lwd=1)
points(year[1:4], salaryReal[1:4], col="blue", bg="blue", pch=15)
points(year[5:12], salaryReal[5:12], col="green", bg="green", pch=16)
points(year[13:length(year)], salaryReal[13:length(salaryReal)], col="blue", bg="blue", pch=17)
legend("bottomright", pch=c(15,16,17), col=c("blue", "green", "blue"), c("李登輝", "陳水扁", "馬英九"), bty="o",  box.col="darkgreen", cex=.8)
plot(year, salaryReal, type="l", xlab="Year", ylab="Real Salary", main="以100年價格衡量之實質薪資1996-2014", sub="行政院主計總處103年12月暨全年薪資與生產力統計結果",  lwd=1)
points(year[1:4], salaryReal[1:4], col="blue", bg="blue", pch=15)
points(year[5:12], salaryReal[5:12], col="green", bg="darkgreen", pch=16)
points(year[13:length(year)], salaryReal[13:length(salaryReal)], col="blue", bg="blue", pch=17)
legend("bottomright", pch=c(15,16,17), col=c("blue", "darkgreen", "blue"), c("李登輝", "陳水扁", "馬英九"), bty="o",  box.col="black", cex=.8)
plot(year, salaryReal, type="l", xlab="Year", ylab="Real Salary", main="以100年價格衡量之實質薪資1996-2014", sub="資料來源:行政院主計總處103年12月暨全年薪資與生產力統計結果",  lwd=1)
points(year[1:4], salaryReal[1:4], col="blue", bg="blue", pch=15)
points(year[5:12], salaryReal[5:12], col="green", bg="darkgreen", pch=16)
points(year[13:length(year)], salaryReal[13:length(salaryReal)], col="blue", bg="blue", pch=17)
legend("bottomright", pch=c(15,16,17), col=c("blue", "darkgreen", "blue"), c("李登輝", "陳水扁", "馬英九"), bty="o",  box.col="black", cex=.8)
plot(year, salaryReal, type="l", xlab="Year", ylab="Real Salary", main=paste("以100年價格衡量之實質薪資1996-2014", "\n", "1996-2014"), sub="資料來源: 行政院主計總處103年12月暨全年薪資與生產力統計結果",  lwd=1)
points(year[1:4], salaryReal[1:4], col="blue", bg="blue", pch=15)
points(year[5:12], salaryReal[5:12], col="green", bg="darkgreen", pch=16)
points(year[13:length(year)], salaryReal[13:length(salaryReal)], col="blue", bg="blue", pch=17)
legend("bottomright", pch=c(15,16,17), col=c("blue", "darkgreen", "blue"), c("李登輝", "陳水扁", "馬英九"), bty="o",  box.col="black", cex=.8)
plot(year, salaryReal, type="l", xlab="Year", ylab="Real Salary", main=paste("以100年價格衡量之實質薪資", "\n", "行政院主計總處103年12月暨全年薪資與生產力統計"), sub="資料來源:https://www.dgbas.gov.tw/public/Attachment/5225164112198I9Y1K.pdf",  lwd=1)
points(year[1:4], salaryReal[1:4], col="blue", bg="blue", pch=15)
points(year[5:12], salaryReal[5:12], col="green", bg="darkgreen", pch=16)
points(year[13:length(year)], salaryReal[13:length(salaryReal)], col="blue", bg="blue", pch=17)
legend("bottomright", pch=c(15,16,17), col=c("blue", "darkgreen", "blue"), c("李登輝", "陳水扁", "馬英九"), bty="o",  box.col="black", cex=.8)
plot(year, salaryReal, type="l", xlab="Year", ylab="Real Salary", main=paste("以100年價格衡量之實質薪資", "\n", "行政院主計總處103年12月暨全年薪資與生產力統計"), sub="資料來源: https://www.dgbas.gov.tw/public/Attachment/5225164112198I9Y1K.pdf",  lwd=1)
points(year[1:4], salaryReal[1:4], col="blue", bg="blue", pch=15)
points(year[5:12], salaryReal[5:12], col="green", bg="darkgreen", pch=16)
points(year[13:length(year)], salaryReal[13:length(salaryReal)], col="blue", bg="blue", pch=17)
legend("bottomright", pch=c(15,16,17), col=c("blue", "darkgreen", "blue"), c("李登輝", "陳水扁", "馬英九"), bty="o",  box.col="black", cex=.8)
plot(year, salaryReal, type="l", xlab="Year", ylab="Real Salary", main=paste(" 歷年工業及服務業受僱員工", "\n", "以100年價格衡量之實質薪資"), sub="資料來源: 行政院主計總處","\n","https://www.dgbas.gov.tw/public/Attachment/5225164112198I9Y1K.pdf",  lwd=1)
plot(year, salaryReal, type="l", xlab="Year", ylab="Real Salary", main=paste(" 歷年工業及服務業受僱員工", "\n", "以100年價格衡量之實質薪資"), sub="資料來源: 行政院主計總處","\n","https://www.dgbas.gov.tw/public/Attachment/5225164112198I9Y1K.pdf",  lwd=1)
points(year[1:4], salaryReal[1:4], col="blue", bg="blue", pch=15)
points(year[5:12], salaryReal[5:12], col="green", bg="darkgreen", pch=16)
points(year[13:length(year)], salaryReal[13:length(salaryReal)], col="blue", bg="blue", pch=17)
legend("bottomright", pch=c(15,16,17), col=c("blue", "darkgreen", "blue"), c("李登輝", "陳水扁", "馬英九"), bty="o",  box.col="black", cex=.8)
plot(year, salaryReal, type="l", xlab="Year", ylab="Real Salary", main=paste(" 歷年工業及服務業受僱員工以100年價格衡量之實質薪資"), sub=paste("資料來源: 行政院主計總處","\n","https://www.dgbas.gov.tw/public/Attachment/5225164112198I9Y1K.pdf"),  lwd=1)
points(year[1:4], salaryReal[1:4], col="blue", bg="blue", pch=15)
points(year[5:12], salaryReal[5:12], col="green", bg="darkgreen", pch=16)
points(year[13:length(year)], salaryReal[13:length(salaryReal)], col="blue", bg="blue", pch=17)
legend("bottomright", pch=c(15,16,17), col=c("blue", "darkgreen", "blue"), c("李登輝", "陳水扁", "馬英九"), bty="o",  box.col="black", cex=.8)
plot(year, salaryReal, type="l", main=paste(" 歷年工業及服務業受僱員工以100年價格衡量之實質薪資"), sub=paste("資料來源: 行政院主計總處","\n","https://www.dgbas.gov.tw/public/Attachment/5225164112198I9Y1K.pdf"),  lwd=1)
points(year[1:4], salaryReal[1:4], col="blue", bg="blue", pch=15)
points(year[5:12], salaryReal[5:12], col="green", bg="darkgreen", pch=16)
points(year[13:length(year)], salaryReal[13:length(salaryReal)], col="blue", bg="blue", pch=17)
legend("bottomright", pch=c(15,16,17), col=c("blue", "darkgreen", "blue"), c("李登輝", "陳水扁", "馬英九"), bty="o",  box.col="black", cex=.8)
legend("bottomright", pch=c(15,16,17), col=c("blue", "darkgreen", "blue"), c("李登輝", "陳水扁", "馬英九"), bty="o",  box.col="black", cex=.8)
legend("bottomright", pch=c(15,18,17), col=c("blue", "darkgreen", "blue"), c("李登輝", "陳水扁", "馬英九"), bty="o",  box.col="black", cex=.8)
legend("bottomright", pch=c(15,16,17), col=c("blue", "darkgreen", "blue"), c("李登輝", "陳水扁", "馬英九"), bty="o",  box.col="black", cex=.8)
plot(year, salaryReal, type="l", main=paste(" 歷年工業及服務業受僱員工以100年價格衡量之實質薪資"), sub=paste("資料來源: 行政院主計總處","\n","https://www.dgbas.gov.tw/public/Attachment/5225164112198I9Y1K.pdf"),  lwd=1)
points(year[1:4], salaryReal[1:4], col="blue", bg="blue", pch=15)
points(year[5:12], salaryReal[5:12], col="darkgreen", bg="darkgreen", pch=16)
points(year[13:length(year)], salaryReal[13:length(salaryReal)], col="blue", bg="blue", pch=17)
legend("bottomright", pch=c(15,16,17), col=c("blue", "darkgreen", "blue"), c("李登輝", "陳水扁", "馬英九"), bty="o",  box.col="black", cex=.8)
plot(year, salaryReal, type="l", main=paste(" 歷年工業及服務業受僱員工以100年價格衡量之實質薪資"), sub=paste("資料來源: 行政院主計總處","\n","https://www.dgbas.gov.tw/public/Attachment/5225164112198I9Y1K.pdf"),  lwd=1)
points(year[1:4], salaryReal[1:4], col="blue", bg="blue", pch=17)
points(year[5:12], salaryReal[5:12], col="darkgreen", bg="darkgreen", pch=18)
points(year[13:length(year)], salaryReal[13:length(salaryReal)], col="blue", bg="blue", pch=19)
legend("bottomright", pch=c(17,18,19), col=c("blue", "darkgreen", "blue"), c("李登輝", "陳水扁", "馬英九"), bty="o",  box.col="black", cex=.8)
plot(year, salaryReal, type="l", main=paste(" 歷年工業及服務業受僱員工以100年價格衡量之實質薪資"), sub=paste("資料來源: 行政院主計總處","\n","https://www.dgbas.gov.tw/public/Attachment/5225164112198I9Y1K.pdf"),  lwd=1)
points(year[1:4], salaryReal[1:4], col="blue", bg="blue", pch=0)
points(year[5:12], salaryReal[5:12], col="darkgreen", bg="darkgreen", pch=1)
points(year[13:length(year)], salaryReal[13:length(salaryReal)], col="blue", bg="blue", pch=2)
legend("bottomright", pch=c(0, 1, 2), col=c("blue", "darkgreen", "blue"), c("李登輝", "陳水扁", "馬英九"), bty="o",  box.col="black", cex=.8)
plot(year, salaryReal, type="l", main=paste(" 歷年工業及服務業受僱員工以100年價格衡量之實質薪資"), sub=paste("資料來源: 行政院主計總處","\n","https://www.dgbas.gov.tw/public/Attachment/5225164112198I9Y1K.pdf"),  lwd=1, xlab=NULL, ylab=NULL)
points(year[1:4], salaryReal[1:4], col="blue", bg="blue", pch=15)
points(year[5:12], salaryReal[5:12], col="darkgreen", bg="darkgreen", pch=16)
points(year[13:length(year)], salaryReal[13:length(salaryReal)], col="blue", bg="blue", pch=17)
legend("bottomright", pch=c(15, 16, 17), col=c("blue", "darkgreen", "blue"), c("李登輝", "陳水扁", "馬英九"), bty="o",  box.col="black", cex=.8)
plot(year, salaryReal, type="l", main=paste(" 歷年工業及服務業受僱員工以100年價格衡量之實質薪資"), sub=paste("資料來源: 行政院主計總處","\n","https://www.dgbas.gov.tw/public/Attachment/5225164112198I9Y1K.pdf"),  lwd=1, xlab="", ylab="")
points(year[1:4], salaryReal[1:4], col="blue", bg="blue", pch=15)
points(year[5:12], salaryReal[5:12], col="darkgreen", bg="darkgreen", pch=16)
points(year[13:length(year)], salaryReal[13:length(salaryReal)], col="blue", bg="blue", pch=17)
legend("bottomright", pch=c(15, 16, 17), col=c("blue", "darkgreen", "blue"), c("李登輝", "陳水扁", "馬英九"), bty="o",  box.col="black", cex=.8)
q()
q()
q()
trainUsers <- read.table('train_users_2.csv', sep=',', stringsAsFactors=T, header=T)
testUsers <- read.table('test_users.csv', sep=',', stringsAsFactors=T, header=T)
setwd("C:/airbnbAtKaggle/data")
trainUsers <- read.table('train_users_2.csv', sep=',', stringsAsFactors=T, header=T)
testUsers <- read.table('test_users.csv', sep=',', stringsAsFactors=T, header=T)
View(trainUsers)
train <- trainUsers[, -c(1,4,6)]
trainSample <- head(train, 10000)
library(randomForest)
rfModel <- randomForest(x=trainSample[, -13], y=trainSample[, 13], ntree=100, nodesize=7, importance=TRUE)
View(trainSample)
q()
